{"name":"JBoss Developer maven-qstools-plugin","tagline":"Utility belt for jboss developer materials","body":"# Quickstarts tools maven plugin\r\n\r\nAuthor: Rafael Benevides\r\nSummary: Maven plugin that helps JBoss Developer materials maintenance\r\n\r\n## What is it?\r\n\r\n\r\nThis a Maven Plugin that helps JBoss Developer materials maintenance.\r\n\r\nYou can use it to verify if your project/quickstart follow the JBoss Developer Guidelines. It will run all JBoss Developer Guideline checkers and generate a report that provides information about any violations that your project/quickstarts has.\r\n\r\nFor Maven BOMs,it can be used to verify if your Maven BOM has all dependencies being resolved.\r\n\r\nYou can also use QSTools to synchronize an Maven Archetype with and existing project.\r\n\r\n\r\n## System requirements\r\n\r\n\r\nAll you need is [Apache Maven 3.0.X](http://maven.apache.org/) and a working internet connection.\r\n\r\n\r\n## Checking the quickstarts made easy\r\n\r\n\r\nSelect a Maven project and run:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:check\r\n    \r\n\r\nThis will check your project and all modules to seek for potential violations.\r\n\r\nThe report will be generated at: `MAVEN_PROJECT/target/site/qschecker.html`\r\n\r\n\r\n### Configuring QSTools Checkers\r\n\r\n\r\nQSTools configuration is made by editing the online file https://raw.github.com/jboss-developer/maven-qstools-plugin/master/config/qstools_config.yaml\r\n\r\nYou can use a local config file by overwriting qstools property:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:check\r\n         -Dqstools.configFileURL=file:///Users/rafaelbenevides/path/qstools_config.yaml\r\n         \r\n\r\n\r\n### Using a custom stacks.yaml definition\r\n\r\n\r\n[Stacks](https://github.com/jboss-jdf/jdf-stack) is used to check the BOM versions used on you project.\r\n\r\nIf you need to use a custom Stacks.yaml definition you can overwrite the stacks url adding the property `qstools.stacks.url` to the command line:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:check\r\n       -Dqstools.stacks.url=file:/somewhere/on/your/disk/stacks.yaml\r\n       \r\n\r\n\r\nor\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:(check)\r\n       -Dqstools.stacks.url=http://www.somewhere.net/somepath/stacks.yaml\r\n       \r\n \r\n## Automatically fixing the quickstarts\r\n\r\n\r\nQSTools can fix most of the violations.\r\n\r\nYou can run:\r\n\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:fix\r\n    \r\n\r\n`NOTE:` It's high recommended that you have your changes saved before running this plugin because it modifies your pom files.\r\n\r\n## If you need to update quickstarts BOMs\r\n\r\n\r\nThis goal will check the [Expected BOM Version](https://github.com/jboss-developer/maven-qstools-plugin/blob/master/config/qstools_config.yaml#L24)  and update the BOM versions to the expected version.\r\n\r\nIt will also replace any community BOMs by the Product BOMs if it is specified under `project-boms-migration` sections of [QSTools configuration file](https://github.com/jboss-developer/maven-qstools-plugin/blob/master/config/qstools_config.yaml)\r\n\r\n`NOTE:` It's high recommended that you have your changes saved before running this plugin because it modifies your pom files.\r\n\r\nTo run the plugin:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:updateBoms\r\n    \r\n\r\n\r\n## Checking the BOM dependencies\r\n\r\n\r\nThis goal will check the given BOM project if all declared dependencies under </dependencyManagement> section is resolvable.\r\n\r\nTo run the plugin: \r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:bom-check\r\n    \r\n\r\nIf you need to ignore certain known dependencies from being checked, you can use the `qstools.bom-check.ignoredDependencies` property.\r\n\r\nExample:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:bom-check \r\n       -Dqstools.bom-check.ignoredDependencies=<groupId 1>:<artifactId 1>:jar:<version 1>,<groupId 2>:<artifactId 2>:jar:<version 2>\r\n    \r\n\r\nBy default, the project build will fail if some managed dependenciy is not resolvable. You can overwrite this behavior by using `qstools.bom-check.failbuild` property.\r\nThis will run on `REPORT ONLY` mode.\r\n\r\nExample:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:bom-check \r\n       -Dqstools.bom-check.failbuild=false\r\n    \r\n\r\nTo specify a custom settings.xml file you must use `org.apache.maven.user-settings` property. This is because [Shrinkwrap Resolver](https://github.com/shrinkwrap/resolver#resolution-of-artifacts-specified-by-maven-coordinates) doesn't consume settings.xml you specified on command line (-s settings.xml) or in the IDE. It reads settings.xml files at their standard locations, which are `~/.m2/settings.xml` and `$M2_HOME/conf/settings.xml` unless overridden in the API or via System property.\r\n\r\nExample:\r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:bom-check \r\n       -Dorg.apache.maven.user-settings=<your custom settings.xml>\r\n    \r\n\r\n## Syncronizing Archetypes with Quickstarts\r\n\r\n\r\nQSTools can be used on archetype to synchronize the archetype-resources with a given project\r\n\r\nThis is an example of configuration:\r\n\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.jboss.maven.plugins</groupId>\r\n                <artifactId>maven-qstools-plugin</artifactId>\r\n                <version>1.3.3-SNAPSHOT</version>\r\n                <configuration>\r\n                    <projectGitRepo>git://github.com/jboss-developer/jboss-eap-quickstarts.git</projectGitRepo>\r\n                    <projectPath>kitchensink-ear</projectPath>\r\n                    <rootPackage>org.jboss.as.quickstarts.kitchensink_ear</rootPackage>\r\n                    <multiModuleProject>true</multiModuleProject>\r\n                    <applyPatch>A-patch-file.patch</applyPatch>\r\n                    <branch>jdf-2.1.7.Final</branch>\r\n                    <archetypeExpressionReplaceValues>\r\n                        <archetypeExpressionReplaceValue>jboss-as-kitchensink-ear</archetypeExpressionReplaceValue>\r\n                        <archetypeExpressionReplaceValue>kitchensink-ear-quickstart</archetypeExpressionReplaceValue>\r\n                        <archetypeExpressionReplaceValue>kitchensink-quickstart</archetypeExpressionReplaceValue>\r\n                        <archetypeExpressionReplaceValue>KitchensinkEarQuickstart</archetypeExpressionReplaceValue>\r\n                        <archetypeExpressionReplaceValue>JBoss EAP Quickstart: kitchensink-ear</archetypeExpressionReplaceValue>\r\n                    </archetypeExpressionReplaceValues>\r\n                    <replaceValueWithExpression>\r\n                        <html5mobi>tableSuffix</html5mobi>\r\n                    </replaceValueWithExpression>\r\n                </configuration>\r\n                <executions>\r\n                    <execution>\r\n                        <phase>generate-sources</phase>\r\n                        <goals>\r\n                            <goal>archetypeSync</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n\r\nThe `archetypeExpressionReplaceValues` configuration is used to replace the given expression to the `${artifactId} expression.\r\n\r\n## Plugin Documentation\r\n\r\nThe plugin documentation *generated from mvn site* [is available here](target/site/plugin-info.html) \r\n\r\n\r\n## Troubleshooting\r\n\r\nYou can turn on debugging messages:   \r\n\r\n    mvn -U org.jboss.maven.plugins:maven-qstools-plugin:check -X\r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}